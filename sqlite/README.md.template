#!/usr/bin/env bash
Makefile=$(cat Makefile) SQLiteShell=$(cat sqlite-shell.sh) RecipeprefixSection=$(cat ../recipeprefix.md) Output=$('make') envsubst <<'EOL'
# Makefile using SQLite3 as recipe shell

Sounds strange but ... why not use SQL as recipe ? 

This Makefile is a fully working proof of concept utilizing sqlite3. 

Please note that one of the major features of make - do only execute targets with updated dependencies - are mostly skipped by this proof.

## Prerequisites

- GNU make 

- SQLite3

## Usage

Change to this directory and execute 

- `make` to populate the database 

- `make clean` to clean up the database 

- `rm db.sqlite3` to remove the database file completely

## Example code

The Makefile:

```make
$Makefile
```

The Shellwrapper file (`sqlite-shell.sh`)

```shell
$SQLiteShell
```

If you run the example by executing `make` in a terminal you will get the following output (SQLite3 version may differ depending on what version you've installed)

```
$Output
```

$RecipeprefixSection
EOL